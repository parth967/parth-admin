{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\parth-admin\\\\src\\\\pages\\\\CodeEditor.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup'; // constants\n\nimport { Button, TextField, Grid } from '@material-ui/core'; // define css-in-js\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    flex: 1,\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  button: {\n    margin: theme.spacing(1)\n  }\n}));\n\nconst CodeEditor = () => {\n  _s();\n\n  const classes = useStyles();\n  const firebaseConfig = {\n    apiKey: \"AIzaSyByf-tlPYeu4KU8LcQB1yvOpkhv4C0ijig\",\n    authDomain: \"parth-admin.firebaseapp.com\",\n    projectId: \"parth-admin\",\n    storageBucket: \"parth-admin.appspot.com\",\n    messagingSenderId: \"247778178343\",\n    appId: \"1:247778178343:web:c68d5d1b869c4b4acba502\"\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          fullName: '',\n          password: '',\n          confirmPassword: '',\n          email: ''\n        },\n        onSubmit: (values, actions) => {\n          createNewUser(values, actions.resetForm);\n          setTimeout(() => {\n            actions.setSubmitting(false);\n          }, 500);\n        },\n        validationSchema: Yup.object().shape({\n          email: Yup.string().email().required('Enter valid email-id'),\n          fullName: Yup.string().required('Please enter full name'),\n          password: Yup.string().matches(/^(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[!@#$%^&*()]).{8,20}\\S$/).required('Please valid password. One uppercase, one lowercase, one special character and no spaces'),\n          confirmPassword: Yup.string().required('Required').test('password-match', 'Password musth match', function (value) {\n            return this.parent.password === value;\n          })\n        }),\n        children: props => {\n          const {\n            values,\n            touched,\n            errors,\n            handleBlur,\n            handleChange,\n            isSubmitting\n          } = props;\n          return /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: classes.title,\n              children: \"Sign up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 28\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              justify: \"space-around\",\n              direction: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                lg: 10,\n                md: 10,\n                sm: 10,\n                xs: 10,\n                className: classes.textField,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  name: \"fullName\",\n                  id: \"fullName\",\n                  label: \"Full Name\",\n                  value: values.fullName,\n                  type: \"text\",\n                  helperText: errors.fullName && touched.fullName ? errors.fullName : 'Enter your full name.',\n                  error: errors.fullName && touched.fullName ? true : false,\n                  onChange: handleChange,\n                  onBlur: handleBlur\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 36\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 32\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                lg: 10,\n                md: 10,\n                sm: 10,\n                xs: 10,\n                className: classes.textField,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  name: \"password\",\n                  id: \"password\",\n                  label: \"Password\",\n                  value: values.password,\n                  type: \"password\",\n                  helperText: errors.password && touched.password ? 'Please valid password. One uppercase, one lowercase, one special character and no spaces' : 'One uppercase, one lowercase, one special character and no spaces',\n                  error: errors.password && touched.password ? true : false,\n                  onChange: handleChange,\n                  onBlur: handleBlur\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 36\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 32\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                lg: 10,\n                md: 10,\n                sm: 10,\n                xs: 10,\n                className: classes.textField,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  name: \"confirmPassword\",\n                  id: \"confirmPassword\",\n                  label: \"Confirm password\",\n                  value: values.confirmPassword,\n                  type: \"password\",\n                  helperText: errors.confirmPassword && touched.confirmPassword ? errors.confirmPassword : 'Re-enter password to confirm',\n                  error: errors.confirmPassword && touched.confirmPassword ? true : false,\n                  onChange: handleChange,\n                  onBlur: handleBlur\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 36\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 32\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                lg: 10,\n                md: 10,\n                sm: 10,\n                xs: 10,\n                className: classes.textField,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  name: \"email\",\n                  id: \"email\",\n                  label: \"Email-id\",\n                  value: values.email,\n                  type: \"email\",\n                  helperText: errors.email && touched.email ? errors.email : 'Enter email-id',\n                  error: errors.email && touched.email ? true : false,\n                  onChange: handleChange,\n                  onBlur: handleBlur\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 36\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 32\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                lg: 10,\n                md: 10,\n                sm: 10,\n                xs: 10,\n                className: classes.submitButton,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  variant: \"contained\",\n                  color: \"secondary\",\n                  disabled: isSubmitting,\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 32\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 32\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 28\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 24\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(CodeEditor, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = CodeEditor;\nexport default CodeEditor;\n\nvar _c;\n\n$RefreshReg$(_c, \"CodeEditor\");","map":{"version":3,"sources":["D:/React/parth-admin/src/pages/CodeEditor.tsx"],"names":["React","makeStyles","createStyles","Formik","Form","Yup","Button","TextField","Grid","useStyles","theme","root","flex","display","flexDirection","justifyContent","button","margin","spacing","CodeEditor","classes","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","fullName","password","confirmPassword","email","values","actions","createNewUser","resetForm","setTimeout","setSubmitting","object","shape","string","required","matches","test","value","parent","props","touched","errors","handleBlur","handleChange","isSubmitting","title","textField","submitButton"],"mappings":"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","sourcesContent":["import React, { FC, ReactElement } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport { MyForm } from \"./MyForm\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport * as firebase from 'firebase';\r\nimport { FirebaseAppProvider, useFirestoreDocData, useFirestore, SuspenseWithPerf } from 'reactfire';\r\n// components\r\nimport PageTitle from \"../components/PageTitle\";\r\nimport Box from '@material-ui/core/Box';\r\nimport { Formik, Form, FormikProps } from 'formik'\r\nimport * as Yup from 'yup'\r\n\r\n// constants\r\nimport { APP_TITLE, PAGE_TITLE_CODE } from '../utils/constants';\r\nimport { Button ,TextField,Grid} from '@material-ui/core';\r\n// define css-in-js\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            flex: 1,\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-between\",\r\n        },\r\n        button: {\r\n   margin: theme.spacing(1),\r\n },\r\n    })\r\n);\r\n\r\nconst CodeEditor: FC<{}> = (): ReactElement => {\r\n    const classes = useStyles();\r\n    const firebaseConfig = {\r\n   apiKey: \"AIzaSyByf-tlPYeu4KU8LcQB1yvOpkhv4C0ijig\",\r\n   authDomain: \"parth-admin.firebaseapp.com\",\r\n   projectId: \"parth-admin\",\r\n   storageBucket: \"parth-admin.appspot.com\",\r\n   messagingSenderId: \"247778178343\",\r\n   appId: \"1:247778178343:web:c68d5d1b869c4b4acba502\"\r\n };\r\n    return (\r\n      <>\r\n      <div className={classes.root}>\r\n           <Formik\r\n               initialValues={{\r\n                   fullName: '',\r\n                   password: '',\r\n                   confirmPassword: '',\r\n                   email: '',\r\n               }}\r\n               onSubmit={(values: ISignUpForm, actions) => {\r\n                   createNewUser(values, actions.resetForm)\r\n                   setTimeout(() => {\r\n                       actions.setSubmitting(false)\r\n                   }, 500)\r\n               }}\r\n               validationSchema={Yup.object().shape({\r\n                   email: Yup.string()\r\n                       .email()\r\n                       .required('Enter valid email-id'),\r\n                   fullName: Yup.string().required('Please enter full name'),\r\n                   password: Yup.string()\r\n                       .matches(\r\n                           /^(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[!@#$%^&*()]).{8,20}\\S$/\r\n                       )\r\n                       .required(\r\n                           'Please valid password. One uppercase, one lowercase, one special character and no spaces'\r\n                       ),\r\n                   confirmPassword: Yup.string()\r\n                       .required('Required')\r\n                       .test(\r\n                           'password-match',\r\n                           'Password musth match',\r\n                           function (value) {\r\n                               return this.parent.password === value\r\n                           }\r\n                       ),\r\n               })}\r\n           >\r\n               {(props: FormikProps<ISignUpForm>) => {\r\n                   const {\r\n                       values,\r\n                       touched,\r\n                       errors,\r\n                       handleBlur,\r\n                       handleChange,\r\n                       isSubmitting,\r\n                   } = props\r\n                   return (\r\n                       <Form>\r\n                           <h1 className={classes.title}>Sign up</h1>\r\n                           <Grid\r\n                               container\r\n                               justify=\"space-around\"\r\n                               direction=\"row\"\r\n                           >\r\n                               <Grid\r\n                                   item\r\n                                   lg={10}\r\n                                   md={10}\r\n                                   sm={10}\r\n                                   xs={10}\r\n                                   className={classes.textField}\r\n                               >\r\n                                   <TextField\r\n                                       name=\"fullName\"\r\n                                       id=\"fullName\"\r\n                                       label=\"Full Name\"\r\n                                       value={values.fullName}\r\n                                       type=\"text\"\r\n                                       helperText={\r\n                                           errors.fullName && touched.fullName\r\n                                               ? errors.fullName\r\n                                               : 'Enter your full name.'\r\n                                       }\r\n                                       error={\r\n                                           errors.fullName && touched.fullName\r\n                                               ? true\r\n                                               : false\r\n                                       }\r\n                                       onChange={handleChange}\r\n                                       onBlur={handleBlur}\r\n                                   />\r\n                               </Grid>\r\n                               <Grid\r\n                                   item\r\n                                   lg={10}\r\n                                   md={10}\r\n                                   sm={10}\r\n                                   xs={10}\r\n                                   className={classes.textField}\r\n                               >\r\n                                   <TextField\r\n                                       name=\"password\"\r\n                                       id=\"password\"\r\n                                       label=\"Password\"\r\n                                       value={values.password}\r\n                                       type=\"password\"\r\n                                       helperText={\r\n                                           errors.password && touched.password\r\n                                               ? 'Please valid password. One uppercase, one lowercase, one special character and no spaces'\r\n                                               : 'One uppercase, one lowercase, one special character and no spaces'\r\n                                       }\r\n                                       error={\r\n                                           errors.password && touched.password\r\n                                               ? true\r\n                                               : false\r\n                                       }\r\n                                       onChange={handleChange}\r\n                                       onBlur={handleBlur}\r\n                                   />\r\n                               </Grid>\r\n                               <Grid\r\n                                   item\r\n                                   lg={10}\r\n                                   md={10}\r\n                                   sm={10}\r\n                                   xs={10}\r\n                                   className={classes.textField}\r\n                               >\r\n                                   <TextField\r\n                                       name=\"confirmPassword\"\r\n                                       id=\"confirmPassword\"\r\n                                       label=\"Confirm password\"\r\n                                       value={values.confirmPassword}\r\n                                       type=\"password\"\r\n                                       helperText={\r\n                                           errors.confirmPassword &&\r\n                                           touched.confirmPassword\r\n                                               ? errors.confirmPassword\r\n                                               : 'Re-enter password to confirm'\r\n                                       }\r\n                                       error={\r\n                                           errors.confirmPassword &&\r\n                                           touched.confirmPassword\r\n                                               ? true\r\n                                               : false\r\n                                       }\r\n                                       onChange={handleChange}\r\n                                       onBlur={handleBlur}\r\n                                   />\r\n                               </Grid>\r\n                               <Grid\r\n                                   item\r\n                                   lg={10}\r\n                                   md={10}\r\n                                   sm={10}\r\n                                   xs={10}\r\n                                   className={classes.textField}\r\n                               >\r\n                                   <TextField\r\n                                       name=\"email\"\r\n                                       id=\"email\"\r\n                                       label=\"Email-id\"\r\n                                       value={values.email}\r\n                                       type=\"email\"\r\n                                       helperText={\r\n                                           errors.email && touched.email\r\n                                               ? errors.email\r\n                                               : 'Enter email-id'\r\n                                       }\r\n                                       error={\r\n                                           errors.email && touched.email\r\n                                               ? true\r\n                                               : false\r\n                                       }\r\n                                       onChange={handleChange}\r\n                                       onBlur={handleBlur}\r\n                                   />\r\n                               </Grid>\r\n                               <Grid\r\n                                   item\r\n                                   lg={10}\r\n                                   md={10}\r\n                                   sm={10}\r\n                                   xs={10}\r\n                                   className={classes.submitButton}\r\n                               >\r\n                               <Button\r\n                                   type=\"submit\"\r\n                                   variant=\"contained\"\r\n                                   color=\"secondary\"\r\n                                   disabled={isSubmitting}\r\n                               >\r\n                                   Submit\r\n                               </Button>\r\n                               \r\n                               </Grid>\r\n                           </Grid>\r\n                       </Form>\r\n                   )\r\n               }}\r\n           </Formik>\r\n       </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CodeEditor;\r\n"]},"metadata":{},"sourceType":"module"}