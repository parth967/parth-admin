{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\parth-admin\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport Login from \"./login\";\nimport { createMuiTheme, responsiveFontSizes, ThemeProvider } from \"@material-ui/core/styles\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Helmet } from \"react-helmet\"; // components\n\nimport Layout from \"./components/Layout\"; // theme\n\nimport { lightTheme, darkTheme } from \"./theme/appTheme\"; // app routes\n\nimport { routes } from \"./config\"; // constants\n\nimport { APP_TITLE } from \"./utils/constants\"; // interfaces\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// define app context\nconst AppContext = /*#__PURE__*/React.createContext(null); // default component\n\nconst DefaultComponent = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: `No Component Defined.`\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 32,\n  columnNumber: 3\n}, this);\n\n_c = DefaultComponent;\n\nfunction App() {\n  _s();\n\n  const [useDefaultTheme, toggle] = useReducer(theme => !theme, true); // define custom theme\n\n  let theme = createMuiTheme(useDefaultTheme ? lightTheme : darkTheme);\n  theme = responsiveFontSizes(theme);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: APP_TITLE\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n      value: null,\n      children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n        theme: theme,\n        children: /*#__PURE__*/_jsxDEV(Router, {\n          children: /*#__PURE__*/_jsxDEV(Switch, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/login\",\n              component: Login\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Layout, {\n              toggleTheme: toggle,\n              useDefaultTheme: useDefaultTheme,\n              children: routes.map(route => route.subRoutes ? route.subRoutes.map(item => /*#__PURE__*/_jsxDEV(Route, {\n                path: `${item.path}`,\n                component: item.component || DefaultComponent,\n                exact: true\n              }, `${item.key}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 21\n              }, this)) : /*#__PURE__*/_jsxDEV(Route, {\n                path: `${route.path}`,\n                component: route.component || DefaultComponent,\n                exact: true\n              }, `${route.key}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"DZI3yQhZEKqfW2eilBqXttLXQRc=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DefaultComponent\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["D:/React/parth-admin/src/App.tsx"],"names":["React","useReducer","Login","createMuiTheme","responsiveFontSizes","ThemeProvider","BrowserRouter","Router","Switch","Route","Helmet","Layout","lightTheme","darkTheme","routes","APP_TITLE","AppContext","createContext","DefaultComponent","App","useDefaultTheme","toggle","theme","map","route","subRoutes","item","path","component","key"],"mappings":";;;AAAA,OAAOA,KAAP,IAA8BC,UAA9B,QAAoD,OAApD;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SACEC,cADF,EAGEC,mBAHF,EAIEC,aAJF,QAKO,0BALP;AAMA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AACA,SAASC,MAAT,QAAuB,cAAvB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,qBAAnB,C,CAEA;;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,kBAAtC,C,CAEA;;AACA,SAASC,MAAT,QAAuB,UAAvB,C,CAEA;;AACA,SAASC,SAAT,QAA0B,mBAA1B,C,CAEA;;;;AAGA;AACA,MAAMC,UAAU,gBAAGhB,KAAK,CAACiB,aAAN,CAAoB,IAApB,CAAnB,C,CAEA;;AACA,MAAMC,gBAAwB,GAAG,mBAC/B;AAAA,YAAO;AAAP;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMA,gB;;AAIN,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,eAAD,EAAkBC,MAAlB,IAA4BpB,UAAU,CAAEqB,KAAD,IAAW,CAACA,KAAb,EAAoB,IAApB,CAA5C,CADa,CAGb;;AACA,MAAIA,KAAY,GAAGnB,cAAc,CAACiB,eAAe,GAAGR,UAAH,GAAgBC,SAAhC,CAAjC;AACAS,EAAAA,KAAK,GAAGlB,mBAAmB,CAACkB,KAAD,CAA3B;AAEA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA,6BACE;AAAA,kBAAQP;AAAR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,UAAD,CAAY,QAAZ;AAAqB,MAAA,KAAK,EAAE,IAA5B;AAAA,6BACE,QAAC,aAAD;AAAe,QAAA,KAAK,EAAEO,KAAtB;AAAA,+BACE,QAAC,MAAD;AAAA,iCACE,QAAC,MAAD;AAAA,oCACA,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,QAAZ;AAAqB,cAAA,SAAS,EAAEpB;AAAhC;AAAA;AAAA;AAAA;AAAA,oBADA,eAEE,QAAC,MAAD;AAAQ,cAAA,WAAW,EAAEmB,MAArB;AAA6B,cAAA,eAAe,EAAED,eAA9C;AAAA,wBAEGN,MAAM,CAACS,GAAP,CAAYC,KAAD,IACVA,KAAK,CAACC,SAAN,GAAkBD,KAAK,CAACC,SAAN,CAAgBF,GAAhB,CAAqBG,IAAD,iBACpC,QAAC,KAAD;AAEE,gBAAA,IAAI,EAAG,GAAEA,IAAI,CAACC,IAAK,EAFrB;AAGE,gBAAA,SAAS,EAAED,IAAI,CAACE,SAAL,IAAkBV,gBAH/B;AAIE,gBAAA,KAAK;AAJP,iBACQ,GAAEQ,IAAI,CAACG,GAAI,EADnB;AAAA;AAAA;AAAA;AAAA,sBADgB,CAAlB,gBAQE,QAAC,KAAD;AAEE,gBAAA,IAAI,EAAG,GAAEL,KAAK,CAACG,IAAK,EAFtB;AAGE,gBAAA,SAAS,EAAEH,KAAK,CAACI,SAAN,IAAmBV,gBAHhC;AAIE,gBAAA,KAAK;AAJP,iBACQ,GAAEM,KAAK,CAACK,GAAI,EADpB;AAAA;AAAA;AAAA;AAAA,sBATH;AAFH;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAmCD;;GA1CQV,G;;MAAAA,G;AA4CT,eAAeA,GAAf","sourcesContent":["import React, { ReactElement, useReducer, FC } from \"react\";\r\nimport Login from \"./login\"\r\nimport {\r\n  createMuiTheme,\r\n  Theme,\r\n  responsiveFontSizes,\r\n  ThemeProvider,\r\n} from \"@material-ui/core/styles\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\n// components\r\nimport Layout from \"./components/Layout\";\r\n\r\n// theme\r\nimport { lightTheme, darkTheme } from \"./theme/appTheme\";\r\n\r\n// app routes\r\nimport { routes } from \"./config\";\r\n\r\n// constants\r\nimport { APP_TITLE } from \"./utils/constants\";\r\n\r\n// interfaces\r\nimport RouteItem from \"./model/RouteItem.model\";\r\n\r\n// define app context\r\nconst AppContext = React.createContext(null);\r\n\r\n// default component\r\nconst DefaultComponent: FC<{}> = (): ReactElement => (\r\n  <div>{`No Component Defined.`}</div>\r\n);\r\n\r\nfunction App() {\r\n  const [useDefaultTheme, toggle] = useReducer((theme) => !theme, true);\r\n\r\n  // define custom theme\r\n  let theme: Theme = createMuiTheme(useDefaultTheme ? lightTheme : darkTheme);\r\n  theme = responsiveFontSizes(theme);\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{APP_TITLE}</title>\r\n      </Helmet>\r\n      <AppContext.Provider value={null}>\r\n        <ThemeProvider theme={theme}>\r\n          <Router>\r\n            <Switch>\r\n            <Route path=\"/login\" component={Login} />\r\n              <Layout toggleTheme={toggle} useDefaultTheme={useDefaultTheme}>\r\n                {/* for each route config, a react route is created */}\r\n                {routes.map((route: RouteItem) => (\r\n                  route.subRoutes ? route.subRoutes.map((item: RouteItem) => (\r\n                    <Route\r\n                      key={`${item.key}`}\r\n                      path={`${item.path}`}\r\n                      component={item.component || DefaultComponent}\r\n                      exact\r\n                    />\r\n                  )) :\r\n                    <Route\r\n                      key={`${route.key}`}\r\n                      path={`${route.path}`}\r\n                      component={route.component || DefaultComponent}\r\n                      exact\r\n                    />\r\n                ))}\r\n              </Layout>\r\n            </Switch>\r\n          </Router>\r\n        </ThemeProvider>\r\n      </AppContext.Provider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}