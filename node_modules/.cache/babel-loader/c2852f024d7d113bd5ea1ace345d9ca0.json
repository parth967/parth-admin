{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\parth-admin\\\\src\\\\components\\\\Navigation.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport { IconButton, Drawer } from \"@material-ui/core\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\"; // components\n\nimport AppMenu from \"./AppMenu\"; // constants\n\nimport { DRAWER_WIDTH } from \"../utils/constants\"; // define css-in-js\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => createStyles({\n  drawer: {\n    width: DRAWER_WIDTH,\n    flexShrink: 0,\n    whiteSpace: \"nowrap\"\n  },\n  drawerOpen: {\n    width: DRAWER_WIDTH,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerClose: {\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    overflowX: \"hidden\",\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9) + 1\n    }\n  },\n  toolbar: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n    background: `linear-gradient(270deg, ${theme.palette.primary.main} 0%, ${theme.palette.background.default} 70%);`\n  }\n})); // define interface to represent component props\n\nconst Navigation = ({\n  open,\n  handleMenuClose\n}) => {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Drawer, {\n      variant: \"permanent\",\n      className: clsx(classes.drawer, {\n        [classes.drawerOpen]: open,\n        [classes.drawerClose]: !open\n      }),\n      classes: {\n        paper: clsx({\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open\n        })\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.toolbar,\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleMenuClose,\n          children: /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {\n            htmlColor: \"#fff\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AppMenu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Navigation, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Navigation;\nexport default Navigation;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navigation\");","map":{"version":3,"sources":["D:/React/parth-admin/src/components/Navigation.tsx"],"names":["React","clsx","createStyles","makeStyles","IconButton","Drawer","ChevronLeftIcon","AppMenu","DRAWER_WIDTH","useStyles","theme","drawer","width","flexShrink","whiteSpace","drawerOpen","transition","transitions","create","easing","sharp","duration","enteringScreen","drawerClose","leavingScreen","overflowX","spacing","breakpoints","up","toolbar","display","alignItems","justifyContent","padding","mixins","background","palette","primary","main","default","Navigation","open","handleMenuClose","classes","paper"],"mappings":";;;AAAA,OAAOA,KAAP,MAAwC,OAAxC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,YAAT,EAAuBC,UAAvB,QAAgD,0BAAhD;AACA,SAASC,UAAT,EAAqBC,MAArB,QAAmC,mBAAnC;AACA,OAAOC,eAAP,MAA4B,gCAA5B,C,CAEA;;AACA,OAAOC,OAAP,MAAoB,WAApB,C,CAEA;;AACA,SAASC,YAAT,QAA6B,oBAA7B,C,CAEA;;;;AACA,MAAMC,SAAS,GAAGN,UAAU,CAAEO,KAAD,IAC3BR,YAAY,CAAC;AACXS,EAAAA,MAAM,EAAE;AACNC,IAAAA,KAAK,EAAEJ,YADD;AAENK,IAAAA,UAAU,EAAE,CAFN;AAGNC,IAAAA,UAAU,EAAE;AAHN,GADG;AAMXC,EAAAA,UAAU,EAAE;AACVH,IAAAA,KAAK,EAAEJ,YADG;AAEVQ,IAAAA,UAAU,EAAEN,KAAK,CAACO,WAAN,CAAkBC,MAAlB,CAAyB,OAAzB,EAAkC;AAC5CC,MAAAA,MAAM,EAAET,KAAK,CAACO,WAAN,CAAkBE,MAAlB,CAAyBC,KADW;AAE5CC,MAAAA,QAAQ,EAAEX,KAAK,CAACO,WAAN,CAAkBI,QAAlB,CAA2BC;AAFO,KAAlC;AAFF,GAND;AAaXC,EAAAA,WAAW,EAAE;AACXP,IAAAA,UAAU,EAAEN,KAAK,CAACO,WAAN,CAAkBC,MAAlB,CAAyB,OAAzB,EAAkC;AAC5CC,MAAAA,MAAM,EAAET,KAAK,CAACO,WAAN,CAAkBE,MAAlB,CAAyBC,KADW;AAE5CC,MAAAA,QAAQ,EAAEX,KAAK,CAACO,WAAN,CAAkBI,QAAlB,CAA2BG;AAFO,KAAlC,CADD;AAKXC,IAAAA,SAAS,EAAE,QALA;AAMXb,IAAAA,KAAK,EAAEF,KAAK,CAACgB,OAAN,CAAc,CAAd,IAAmB,CANf;AAOX,KAAChB,KAAK,CAACiB,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,GAA8B;AAC5BhB,MAAAA,KAAK,EAAEF,KAAK,CAACgB,OAAN,CAAc,CAAd,IAAmB;AADE;AAPnB,GAbF;AAwBXG,EAAAA,OAAO,EAAE;AACPC,IAAAA,OAAO,EAAE,MADF;AAEPC,IAAAA,UAAU,EAAE,QAFL;AAGPC,IAAAA,cAAc,EAAE,UAHT;AAIPC,IAAAA,OAAO,EAAEvB,KAAK,CAACgB,OAAN,CAAc,CAAd,EAAiB,CAAjB,CAJF;AAKP,OAAGhB,KAAK,CAACwB,MAAN,CAAaL,OALT;AAMPM,IAAAA,UAAU,EAAG,2BAA0BzB,KAAK,CAAC0B,OAAN,CAAcC,OAAd,CAAsBC,IAAK,QAAO5B,KAAK,CAAC0B,OAAN,CAAcD,UAAd,CAAyBI,OAAQ;AANnG;AAxBE,CAAD,CADc,CAA5B,C,CAoCA;;AAMA,MAAMC,UAAqB,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAA6C;AAAA;;AACzE,QAAMC,OAAO,GAAGlC,SAAS,EAAzB;AACA,sBACE;AAAA,2BACE,QAAC,MAAD;AACE,MAAA,OAAO,EAAC,WADV;AAEE,MAAA,SAAS,EAAER,IAAI,CAAC0C,OAAO,CAAChC,MAAT,EAAiB;AAC9B,SAACgC,OAAO,CAAC5B,UAAT,GAAsB0B,IADQ;AAE9B,SAACE,OAAO,CAACpB,WAAT,GAAuB,CAACkB;AAFM,OAAjB,CAFjB;AAME,MAAA,OAAO,EAAE;AACPG,QAAAA,KAAK,EAAE3C,IAAI,CAAC;AACV,WAAC0C,OAAO,CAAC5B,UAAT,GAAsB0B,IADZ;AAEV,WAACE,OAAO,CAACpB,WAAT,GAAuB,CAACkB;AAFd,SAAD;AADJ,OANX;AAAA,8BAaE;AAAK,QAAA,SAAS,EAAEE,OAAO,CAACd,OAAxB;AAAA,+BACE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAEa,eAArB;AAAA,iCACE,QAAC,eAAD;AAAiB,YAAA,SAAS,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAbF,eAkBE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAlBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAwBD,CA1BD;;GAAMF,U;UACY/B,S;;;KADZ+B,U;AA4BN,eAAeA,UAAf","sourcesContent":["import React, { FC, ReactElement } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport { IconButton, Drawer } from \"@material-ui/core\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\n\r\n// components\r\nimport AppMenu from \"./AppMenu\";\r\n\r\n// constants\r\nimport { DRAWER_WIDTH } from \"../utils/constants\";\r\n\r\n// define css-in-js\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    drawer: {\r\n      width: DRAWER_WIDTH,\r\n      flexShrink: 0,\r\n      whiteSpace: \"nowrap\",\r\n    },\r\n    drawerOpen: {\r\n      width: DRAWER_WIDTH,\r\n      transition: theme.transitions.create(\"width\", {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    drawerClose: {\r\n      transition: theme.transitions.create(\"width\", {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      overflowX: \"hidden\",\r\n      width: theme.spacing(7) + 1,\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        width: theme.spacing(9) + 1,\r\n      },\r\n    },\r\n    toolbar: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"flex-end\",\r\n      padding: theme.spacing(0, 1),\r\n      ...theme.mixins.toolbar,\r\n      background: `linear-gradient(270deg, ${theme.palette.primary.main} 0%, ${theme.palette.background.default} 70%);`,\r\n    },\r\n  })\r\n);\r\n\r\n// define interface to represent component props\r\ninterface Props {\r\n  open: boolean;\r\n  handleMenuClose: () => void;\r\n}\r\n\r\nconst Navigation: FC<Props> = ({ open, handleMenuClose }): ReactElement => {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={handleMenuClose}>\r\n            <ChevronLeftIcon htmlColor=\"#fff\" />\r\n          </IconButton>\r\n        </div>\r\n        <AppMenu />\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n"]},"metadata":{},"sourceType":"module"}