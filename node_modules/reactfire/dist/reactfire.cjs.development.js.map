{"version":3,"file":"reactfire.cjs.development.js","sources":["../src/sdk.tsx","../src/firebaseApp.tsx","../src/auth.tsx","../src/database.tsx","../src/SuspenseSubject.ts","../src/useObservable.ts","../src/firestore.tsx","../src/performance.tsx","../src/remote-config/getValue.tsx","../src/remote-config/index.tsx","../src/storage.tsx","../src/index.ts"],"sourcesContent":["import { useFirebaseApp, useSuspenseEnabledFromConfigAndContext, preloadObservable } from './';\nimport firebase from 'firebase/app';\nimport { Observable } from 'rxjs';\n\ntype ComponentName = 'analytics' | 'auth' | 'database' | 'firestore' | 'functions' | 'messaging' | 'performance' | 'remoteConfig' | 'storage';\n\ntype ValueOf<T> = T[keyof T];\ntype App = firebase.app.App;\ntype FirebaseInstanceFactory = ValueOf<Pick<App, ComponentName>>;\ntype FirebaseNamespaceComponent = ValueOf<Pick<typeof firebase, ComponentName>>;\n\nfunction importSDK(sdk: ComponentName) {\n  switch (sdk) {\n    case 'analytics':\n      return import(/* webpackChunkName: \"analytics\" */ 'firebase/analytics');\n    case 'auth':\n      return import(/* webpackChunkName: \"auth\" */ 'firebase/auth');\n    case 'database':\n      return import(/* webpackChunkName: \"database\" */ 'firebase/database');\n    case 'firestore':\n      return import(/* webpackChunkName: \"firestore\" */ 'firebase/firestore');\n    case 'functions':\n      return import(/* webpackChunkName: \"functions\" */ 'firebase/functions');\n    case 'messaging':\n      return import(/* webpackChunkName: \"messaging\" */ 'firebase/messaging');\n    case 'performance':\n      return import(/* webpackChunkName: \"performance\" */ 'firebase/performance');\n    case 'remoteConfig':\n      return import(/* webpackChunkName: \"remoteConfig\" */ 'firebase/remote-config');\n    case 'storage':\n      return import(/* webpackChunkName: \"storage\" */ 'firebase/storage');\n  }\n}\n\nfunction proxyComponent(componentName: 'auth'): typeof firebase.auth;\nfunction proxyComponent(componentName: 'analytics'): typeof firebase.analytics;\nfunction proxyComponent(componentName: 'database'): typeof firebase.database;\nfunction proxyComponent(componentName: 'firestore'): typeof firebase.firestore;\nfunction proxyComponent(componentName: 'functions'): typeof firebase.functions;\nfunction proxyComponent(componentName: 'messaging'): typeof firebase.messaging;\nfunction proxyComponent(componentName: 'performance'): typeof firebase.performance;\nfunction proxyComponent(componentName: 'remoteConfig'): typeof firebase.remoteConfig;\nfunction proxyComponent(componentName: 'storage'): typeof firebase.storage;\nfunction proxyComponent(componentName: ComponentName): FirebaseNamespaceComponent {\n  let contextualApp: App | undefined;\n  const useComponent = (app?: App, suspense?: boolean) => {\n    contextualApp = useFirebaseApp();\n    const suspenseEnabled = useSuspenseEnabledFromConfigAndContext(suspense);\n\n    const sdkSubject = preload(componentName, app || contextualApp);\n\n    if (!sdkSubject.hasValue && suspenseEnabled) {\n      throw sdkSubject.firstEmission;\n    } else if (!sdkSubject.hasValue && !suspenseEnabled && !firebase[componentName]) {\n      throw new Error(\n        `ReactFire: \"firebase/${componentName}\" not found. Please import it in your component, or call preload${componentName.charAt(0).toUpperCase() +\n          componentName.slice(1)} and wait for it to resolve. ReactFire can only auto-import Firebase libraries if Suspense mode is enabled.`\n      );\n    }\n\n    // get value to throw if there's an error\n    sdkSubject.value; // eslint-disable-line @typescript-eslint/no-unused-expressions\n    return firebase[componentName];\n  };\n  return new Proxy(useComponent, {\n    // @ts-ignore: TODO: Fix the types here\n    get: (target, p) => target()[p],\n    apply: (target, _this, args) => {\n      const component = target(args[0]).bind(_this);\n      // If they don't pass an app, assume the app in context rather than [DEFAULT]\n      if (!args[0]) {\n        args[0] = contextualApp;\n      }\n      return component(...args);\n    }\n  }) as any;\n}\n\nexport const useAuth = proxyComponent('auth');\nexport const useAnalytics = proxyComponent('analytics');\nexport const useDatabase = proxyComponent('database');\nexport const useFirestore = proxyComponent('firestore');\nexport const useFunctions = proxyComponent('functions');\nexport const useMessaging = proxyComponent('messaging');\nexport const usePerformance = proxyComponent('performance');\nexport const useRemoteConfig = proxyComponent('remoteConfig');\nexport const useStorage = proxyComponent('storage');\n\nexport const auth = useAuth;\nexport const analytics = useAnalytics;\nexport const database = useDatabase;\nexport const firestore = useFirestore;\nexport const functions = useFunctions;\nexport const messaging = useMessaging;\nexport const performance = usePerformance;\nexport const remoteConfig = useRemoteConfig;\nexport const storage = useStorage;\n\nexport type PreloadOptions<T> = {\n  firebaseApp: App;\n  setup?: (instanceFactory: T) => void | Promise<any>;\n  suspense?: boolean;\n};\n\nfunction preloadFactory(componentName: 'auth'): (options: PreloadOptions<App['auth']>) => Promise<App['auth']>;\nfunction preloadFactory(componentName: 'analytics'): (options: PreloadOptions<App['analytics']>) => Promise<App['analytics']>;\nfunction preloadFactory(componentName: 'database'): (options: PreloadOptions<App['database']>) => Promise<App['database']>;\nfunction preloadFactory(componentName: 'firestore'): (options: PreloadOptions<App['firestore']>) => Promise<App['firestore']>;\nfunction preloadFactory(componentName: 'functions'): (options: PreloadOptions<App['functions']>) => Promise<App['functions']>;\nfunction preloadFactory(componentName: 'messaging'): (options: PreloadOptions<App['messaging']>) => Promise<App['messaging']>;\nfunction preloadFactory(componentName: 'performance'): (options: PreloadOptions<App['performance']>) => Promise<App['performance']>;\nfunction preloadFactory(componentName: 'remoteConfig'): (options: PreloadOptions<App['remoteConfig']>) => Promise<App['remoteConfig']>;\nfunction preloadFactory(componentName: 'storage'): (options: PreloadOptions<App['storage']>) => Promise<App['storage']>;\nfunction preloadFactory(componentName: ComponentName) {\n  return (options: PreloadOptions<FirebaseInstanceFactory>) => preload(componentName, options.firebaseApp, options.setup).toPromise();\n}\n\nfunction preload(componentName: ComponentName, firebaseApp: App, settingsCallback: (instanceFactory: FirebaseInstanceFactory) => any = () => {}) {\n  const app = firebaseApp;\n\n  return preloadObservable(\n    new Observable(emitter => {\n      importSDK(componentName)\n        .then(() => {\n          const instanceFactory: FirebaseInstanceFactory = app[componentName].bind(app);\n          Promise.resolve(settingsCallback(instanceFactory)).then(() => {\n            emitter.next(instanceFactory);\n            emitter.complete();\n          });\n        })\n        .catch(e => {\n          emitter.error(e);\n          emitter.complete();\n        });\n    }),\n    `firebase-sdk:${componentName}:${app.name}`\n  );\n}\n\nexport const preloadAuth = preloadFactory('auth');\nexport const preloadAnalytics = preloadFactory('analytics');\nexport const preloadDatabase = preloadFactory('database');\nexport const preloadFirestore = preloadFactory('firestore');\nexport const preloadFunctions = preloadFactory('functions');\nexport const preloadMessaging = preloadFactory('messaging');\nexport const preloadPerformance = preloadFactory('performance');\nexport const preloadRemoteConfig = preloadFactory('remoteConfig');\nexport const preloadStorage = preloadFactory('storage');\n","import firebase from 'firebase/app';\nimport * as React from 'react';\n\nexport * from './sdk';\n\ntype FirebaseAppContextValue = firebase.app.App;\n\n// INVESTIGATE I don't like magic strings, can we have export this in js-sdk?\nconst DEFAULT_APP_NAME = '[DEFAULT]';\n\nconst FirebaseAppContext = React.createContext<FirebaseAppContextValue | undefined>(undefined);\n\nconst SuspenseEnabledContext = React.createContext<boolean>(false);\n\ntype Props = {\n  firebaseApp?: firebase.app.App;\n  firebaseConfig?: Object;\n  appName?: string;\n  suspense?: boolean;\n};\n\n// @ts-ignore: \"__REACTFIRE_VERSION__\" is replaced with actual ReactFire version (see babel.config.js)\nexport const version = __REACTFIRE_VERSION__;\n\nconst shallowEq = (a: { [key: string]: any }, b: { [key: string]: any }) => a === b || [...Object.keys(a), ...Object.keys(b)].every(key => a[key] === b[key]);\n\nexport function FirebaseAppProvider(props: Props & { [key: string]: unknown }) {\n  const { firebaseConfig, appName, suspense } = props;\n\n  const firebaseApp: firebase.app.App = React.useMemo(() => {\n    if (props.firebaseApp) {\n      return props.firebaseApp;\n    }\n\n    const existingApp = firebase.apps.find(app => app.name === (appName || DEFAULT_APP_NAME));\n    if (existingApp) {\n      if (firebaseConfig && shallowEq(existingApp.options, firebaseConfig)) {\n        return existingApp;\n      } else {\n        throw new Error(\n          `Does not match the options already provided to the ${appName || 'default'} firebase app instance, give this new instance a different appName.`\n        );\n      }\n    } else {\n      if (!firebaseConfig) {\n        throw new Error('No firebaseConfig provided');\n      }\n\n      // TODO: DOUBLE CHECK THAT THIS GETS CALLED\n      const reactVersion = React.version || 'unknown';\n      firebase.registerVersion('react', reactVersion);\n      firebase.registerVersion('reactfire', version);\n      return firebase.initializeApp(firebaseConfig, appName);\n    }\n  }, [props.firebaseApp, firebaseConfig, appName]);\n\n  return (\n    <FirebaseAppContext.Provider value={firebaseApp}>\n      <SuspenseEnabledContext.Provider value={suspense ?? false} {...props} />\n    </FirebaseAppContext.Provider>\n  );\n}\n\nexport function useIsSuspenseEnabled(): boolean {\n  const suspense = React.useContext(SuspenseEnabledContext);\n\n  // default to false if not available in context\n  return suspense ?? false;\n}\n\nexport function useSuspenseEnabledFromConfigAndContext(suspenseFromConfig?: boolean): boolean {\n  let suspenseFromContext = React.useContext(SuspenseEnabledContext);\n\n  // prioritize config over context\n  if (suspenseFromConfig !== undefined) {\n    return suspenseFromConfig;\n  }\n\n  return suspenseFromContext;\n}\n\nexport function useFirebaseApp() {\n  const firebaseApp = React.useContext(FirebaseAppContext);\n  if (!firebaseApp) {\n    throw new Error('Cannot call useFirebaseApp unless your component is within a FirebaseAppProvider');\n  }\n\n  return firebaseApp;\n}\n","import firebase from 'firebase/app';\nimport * as React from 'react';\nimport { user } from 'rxfire/auth';\nimport { preloadAuth, preloadObservable, ReactFireOptions, useAuth, useObservable, ObservableStatus } from './';\nimport { from } from 'rxjs';\nimport { useFirebaseApp } from './firebaseApp';\n\nexport function preloadUser(options?: { firebaseApp?: firebase.app.App }) {\n  // TODO: Find an alternative that doesn't break the rules of hooks (conditional hook call)\n  const firebaseApp = options?.firebaseApp || useFirebaseApp();\n\n  return preloadAuth({ firebaseApp }).then(auth => {\n    const result = preloadObservable(user(auth()), `auth:user:${firebaseApp.name}`);\n    return result.toPromise();\n  });\n}\n\n/**\n * Subscribe to Firebase auth state changes, including token refresh\n *\n * @param auth - the [firebase.auth](https://firebase.google.com/docs/reference/js/firebase.auth) object\n * @param options\n */\nexport function useUser<T = unknown>(auth?: firebase.auth.Auth, options?: ReactFireOptions<T>): ObservableStatus<firebase.User> {\n  // TODO: Find an alternative that doesn't break the rules of hooks (conditional hook call)\n  auth = auth || useAuth();\n\n  if (!auth) {\n    throw new Error('firebase.auth not found');\n  }\n\n  const observableId = `auth:user:${auth.app.name}`;\n  const observable$ = user(auth);\n\n  let currentUser = auth.currentUser;\n\n  // If currentUser is available, skip initialData\n  if (options?.initialData && !currentUser) {\n    currentUser = options.initialData;\n  }\n\n  return useObservable(observableId, observable$, { ...options, initialData: currentUser });\n}\n\nexport function useIdTokenResult(\n  user: firebase.User,\n  forceRefresh: boolean = false,\n  options?: ReactFireOptions<firebase.auth.IdTokenResult>\n): ObservableStatus<firebase.auth.IdTokenResult> {\n  if (!user) {\n    throw new Error('you must provide a user');\n  }\n\n  const observableId = `auth:idTokenResult:${user.uid}:forceRefresh=${forceRefresh}`;\n  const observable$ = from(user.getIdTokenResult(forceRefresh));\n\n  return useObservable(observableId, observable$, options);\n}\n\nexport interface AuthCheckProps {\n  auth?: firebase.auth.Auth;\n  fallback: React.ReactNode;\n  children: React.ReactNode;\n  requiredClaims?: Object;\n}\n\nexport interface ClaimsCheckProps {\n  user: firebase.User;\n  fallback: React.ReactNode;\n  children: React.ReactNode;\n  requiredClaims?: { [key: string]: any };\n}\n\nexport function ClaimsCheck({ user, fallback, children, requiredClaims }: ClaimsCheckProps) {\n  const { data } = useIdTokenResult(user, false);\n  const { claims } = data;\n  const missingClaims: { [key: string]: { expected: string; actual: string } } = {};\n\n  if (requiredClaims) {\n    Object.keys(requiredClaims).forEach(claim => {\n      if (requiredClaims[claim] !== claims[claim]) {\n        missingClaims[claim] = {\n          expected: requiredClaims[claim],\n          actual: claims[claim]\n        };\n      }\n    });\n  }\n\n  if (Object.keys(missingClaims).length === 0) {\n    return <>{children}</>;\n  } else {\n    return <>{fallback}</>;\n  }\n}\n\nexport function AuthCheck({ auth, fallback, children, requiredClaims }: AuthCheckProps): JSX.Element {\n  const { data: user } = useUser<firebase.User>(auth);\n\n  if (user) {\n    return requiredClaims ? (\n      <ClaimsCheck user={user} fallback={fallback} requiredClaims={requiredClaims}>\n        {children}\n      </ClaimsCheck>\n    ) : (\n      <>{children}</>\n    );\n  } else {\n    return <>{fallback}</>;\n  }\n}\n","import firebase from 'firebase/app';\nimport { list, object, QueryChange, listVal } from 'rxfire/database';\nimport { ReactFireOptions, useObservable, checkIdField, ObservableStatus, ReactFireGlobals } from './';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n// Since we're side-effect free, we need to ensure our observableId cache is global\nconst cachedQueries: Array<firebase.database.Query> = ((globalThis as any) as ReactFireGlobals)._reactFireDatabaseCachedQueries || [];\n\nif (!((globalThis as any) as ReactFireGlobals)._reactFireDatabaseCachedQueries) {\n  ((globalThis as any) as ReactFireGlobals)._reactFireDatabaseCachedQueries = cachedQueries;\n}\n\nfunction getUniqueIdForDatabaseQuery(query: firebase.database.Query) {\n  const index = cachedQueries.findIndex(cachedQuery => cachedQuery.isEqual(query));\n  if (index > -1) {\n    return index;\n  }\n  return cachedQueries.push(query) - 1;\n}\n\n/**\n * Subscribe to a Realtime Database object\n *\n * @param ref - Reference to the DB object you want to listen to\n * @param options\n */\nexport function useDatabaseObject<T = unknown>(ref: firebase.database.Reference, options?: ReactFireOptions<T>): ObservableStatus<QueryChange | T> {\n  const observableId = `database:object:${ref.toString()}`;\n  const observable$ = object(ref);\n\n  return useObservable(observableId, observable$, options);\n}\n\n// ============================================================================\n// TODO: switch to rxfire's objectVal once this PR is merged:\n// https://github.com/firebase/firebase-js-sdk/pull/2352\n\nfunction objectVal<T>(query: firebase.database.Query, keyField?: string): Observable<T> {\n  return object(query).pipe(map(change => changeToData(change, keyField) as T));\n}\n\nfunction changeToData(change: QueryChange, keyField?: string): {} {\n  const val = change.snapshot.val();\n\n  // don't worry about setting IDs if the value is a primitive type\n  if (typeof val !== 'object') {\n    return val;\n  }\n\n  return {\n    ...change.snapshot.val(),\n    ...(keyField ? { [keyField]: change.snapshot.key } : null)\n  };\n}\n// ============================================================================\n\nexport function useDatabaseObjectData<T>(ref: firebase.database.Reference, options?: ReactFireOptions<T>): ObservableStatus<T> {\n  const idField = options ? checkIdField(options) : 'NO_ID_FIELD';\n  const observableId = `database:objectVal:${ref.toString()}:idField=${idField}`;\n  const observable$ = objectVal(ref, idField);\n\n  return useObservable(observableId, observable$, options);\n}\n\n/**\n * Subscribe to a Realtime Database list\n *\n * @param ref - Reference to the DB List you want to listen to\n * @param options\n */\nexport function useDatabaseList<T = { [key: string]: unknown }>(\n  ref: firebase.database.Reference | firebase.database.Query,\n  options?: ReactFireOptions<T[]>\n): ObservableStatus<QueryChange[] | T[]> {\n  const hash = `database:list:${getUniqueIdForDatabaseQuery(ref)}`;\n  const observable$ = list(ref);\n\n  return useObservable(hash, observable$, options);\n}\n\nexport function useDatabaseListData<T = { [key: string]: unknown }>(\n  ref: firebase.database.Reference | firebase.database.Query,\n  options?: ReactFireOptions<T[]>\n): ObservableStatus<T[]> {\n  const idField = options ? checkIdField(options) : 'NO_ID_FIELD';\n  const observableId = `database:listVal:${getUniqueIdForDatabaseQuery(ref)}:idField=${idField}`;\n  const observable$ = listVal(ref, idField);\n  return useObservable(observableId, observable$, options);\n}\n","import { empty, Observable, Subject, Subscriber, Subscription } from 'rxjs';\nimport { catchError, shareReplay, tap } from 'rxjs/operators';\n\nexport class SuspenseSubject<T> extends Subject<T> {\n  private _value: T | undefined;\n  private _hasValue = false;\n  private _timeoutHandler: NodeJS.Timeout;\n  private _firstEmission: Promise<void>;\n  private _error: any = undefined;\n  private _innerObservable: Observable<T>;\n  private _warmupSubscription: Subscription;\n\n  // @ts-ignore: TODO: double check to see if this is an RXJS thing or if we should listen to TS\n  private _innerSubscriber: Subscription;\n  // @ts-ignore: TODO: double check to see if this is an RXJS thing or if we should listen to TS\n  private _resolveFirstEmission: () => void;\n\n  constructor(innerObservable: Observable<T>, private _timeoutWindow: number) {\n    super();\n    this._firstEmission = new Promise<void>(resolve => (this._resolveFirstEmission = resolve));\n    this._innerObservable = innerObservable.pipe(\n      tap(\n        v => {\n          this._next(v);\n        },\n        e => {\n          // save the error, so that we can raise on subscription or .value\n          // resolve the promise, so suspense tries again\n          this._error = e;\n          this._resolveFirstEmission();\n        }\n      ),\n      catchError(() => empty()),\n      shareReplay(1)\n    );\n    // warm up the observable\n    this._warmupSubscription = this._innerObservable.subscribe();\n\n    // set a timeout for reseting the cache, subscriptions will cancel the timeout\n    // and reschedule again on unsubscribe\n    this._timeoutHandler = setTimeout(this._reset, this._timeoutWindow);\n  }\n\n  get hasValue(): boolean {\n    // hasValue returns true if there's an error too\n    // so that after we resolve the promise & useObservable is called again\n    // we won't throw again\n    return this._hasValue || !!this._error;\n  }\n\n  get value(): T | undefined {\n    // TODO figure out how to reset the cache here, if I _reset() here before throwing\n    // it doesn't seem to work.\n    // As it is now, this will burn the cache entry until the timeout fires.\n    if (this._error) {\n      throw this._error;\n    }\n    return this._value;\n  }\n\n  get firstEmission(): Promise<void> {\n    return this._firstEmission;\n  }\n\n  private _next(value: T) {\n    this._hasValue = true;\n    this._value = value;\n    this._resolveFirstEmission();\n  }\n\n  private _reset() {\n    // seems to be undefined in tests?\n    if (this._warmupSubscription) {\n      this._warmupSubscription.unsubscribe();\n    }\n    this._hasValue = false;\n    this._value = undefined;\n    this._error = undefined;\n    this._firstEmission = new Promise<void>(resolve => (this._resolveFirstEmission = resolve));\n  }\n\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    if (this._timeoutHandler) {\n      clearTimeout(this._timeoutHandler);\n    }\n    this._innerSubscriber = this._innerObservable.subscribe(subscriber);\n    return this._innerSubscriber.add(this._reset);\n  }\n\n  get ourError() {\n    return this._error;\n  }\n}\n","import * as React from 'react';\nimport { Observable } from 'rxjs';\nimport { SuspenseSubject } from './SuspenseSubject';\nimport { useSuspenseEnabledFromConfigAndContext } from './firebaseApp';\nimport { ReactFireGlobals, ReactFireOptions } from './';\n\nconst DEFAULT_TIMEOUT = 30_000;\n\n// Since we're side-effect free, we need to ensure our observable cache is global\nconst preloadedObservables: Map<string, SuspenseSubject<any>> = ((globalThis as any) as ReactFireGlobals)._reactFirePreloadedObservables || new Map();\n\nif (!((globalThis as any) as ReactFireGlobals)._reactFirePreloadedObservables) {\n  ((globalThis as any) as ReactFireGlobals)._reactFirePreloadedObservables = preloadedObservables;\n}\n\n// Starts listening to an Observable.\n// Call this once you know you're going to render a\n// child that will consume the observable\nexport function preloadObservable<T>(source: Observable<T>, id: string) {\n  if (preloadedObservables.has(id)) {\n    return preloadedObservables.get(id) as SuspenseSubject<T>;\n  } else {\n    const observable = new SuspenseSubject(source, DEFAULT_TIMEOUT);\n    preloadedObservables.set(id, observable);\n    return observable;\n  }\n}\n\nexport interface ObservableStatus<T> {\n  status:\n    | 'loading' // waiting for first value from observable\n    | 'error'\n    | 'success'; // has received at least one value\n  hasEmitted: boolean; // has received at least one value\n  isComplete: boolean; // observable has triggered onComplete event\n  data: T; // latest data from observable\n  error: Error | undefined;\n  firstValuePromise: Promise<void>; // promise that resolves after first emit from observable\n}\n\nexport function useObservable<T>(observableId: string, source: Observable<T | any>, config: ReactFireOptions = {}): ObservableStatus<T> {\n  if (!observableId) {\n    throw new Error('cannot call useObservable without an observableId');\n  }\n  const observable = preloadObservable(source, observableId);\n\n  const hasInitialData = Object.keys(config).includes('initialData');\n\n  const suspenseEnabled = useSuspenseEnabledFromConfigAndContext(config.suspense);\n\n  if (!observable.hasValue && !config?.initialData) {\n    if (suspenseEnabled === true) {\n      throw observable.firstEmission;\n    }\n  }\n\n  const [latest, setValue] = React.useState(() => (observable.hasValue ? observable.value : config.initialData));\n  React.useEffect(() => {\n    const subscription = observable.subscribe(\n      v => {\n        setValue(() => v);\n      },\n      e => {\n        throw e;\n      }\n    );\n    return () => subscription.unsubscribe();\n  }, [observable]);\n\n  let status: ObservableStatus<T>['status'];\n\n  if (observable.hasError) {\n    status = 'error';\n  } else if (observable.hasValue || hasInitialData) {\n    status = 'success';\n  } else {\n    status = 'loading';\n  }\n\n  return {\n    status,\n    hasEmitted: observable.hasValue,\n    isComplete: observable.isStopped,\n    data: latest,\n    error: observable.ourError,\n    firstValuePromise: observable.firstEmission\n  };\n}\n","import firebase from 'firebase/app';\nimport { collectionData, doc, docData, fromCollectionRef } from 'rxfire/firestore';\nimport { preloadFirestore, ReactFireOptions, useObservable, checkIdField, ReactFireGlobals } from './';\nimport { preloadObservable, ObservableStatus } from './useObservable';\nimport { first } from 'rxjs/operators';\nimport { useFirebaseApp } from './firebaseApp';\n\n// Since we're side-effect free, we need to ensure our observableId cache is global\nconst cachedQueries: Array<firebase.firestore.Query> = ((globalThis as any) as ReactFireGlobals)._reactFireFirestoreQueryCache || [];\n\nif (!((globalThis as any) as ReactFireGlobals)._reactFireFirestoreQueryCache) {\n  ((globalThis as any) as ReactFireGlobals)._reactFireFirestoreQueryCache = cachedQueries;\n}\n\nfunction getUniqueIdForFirestoreQuery(query: firebase.firestore.Query) {\n  const index = cachedQueries.findIndex(cachedQuery => cachedQuery.isEqual(query));\n  if (index > -1) {\n    return index;\n  }\n  return cachedQueries.push(query) - 1;\n}\n\n// starts a request for a firestore doc.\n// imports the firestore SDK automatically\n// if it hasn't been imported yet.\n//\n// there's a decent chance this gets called before the Firestore SDK\n// has been imported, so it takes a refProvider instead of a ref\nexport function preloadFirestoreDoc(\n  refProvider: (firestore: firebase.firestore.Firestore) => firebase.firestore.DocumentReference,\n  options?: { firebaseApp?: firebase.app.App }\n) {\n  // TODO: Find an alternative that doesn't break the rules of hooks (conditional hook call)\n  const firebaseApp = options?.firebaseApp || useFirebaseApp();\n\n  return preloadFirestore({ firebaseApp }).then(firestore => {\n    const ref = refProvider(firestore());\n    return preloadObservable(doc(ref), `firestore:doc:${firebaseApp.name}:${ref.path}`);\n  });\n}\n\n/**\n * Suscribe to Firestore Document changes\n *\n * @param ref - Reference to the document you want to listen to\n * @param options\n */\nexport function useFirestoreDoc<T = unknown>(\n  ref: firebase.firestore.DocumentReference,\n  options?: ReactFireOptions<T>\n): ObservableStatus<T extends {} ? T : firebase.firestore.DocumentSnapshot> {\n  const observableId = `firestore:doc:${ref.firestore.app.name}:${ref.path}`;\n  const observable$ = doc(ref);\n\n  return useObservable(observableId, observable$, options);\n}\n\n/**\n * Get a firestore document and don't subscribe to changes\n *\n * @param ref - Reference to the document you want to get\n * @param options\n */\nexport function useFirestoreDocOnce<T = unknown>(\n  ref: firebase.firestore.DocumentReference,\n  options?: ReactFireOptions<T>\n): ObservableStatus<T extends {} ? T : firebase.firestore.DocumentSnapshot> {\n  const observableId = `firestore:docOnce:${ref.firestore.app.name}:${ref.path}`;\n  const observable$ = doc(ref).pipe(first());\n\n  return useObservable(observableId, observable$, options);\n}\n\n/**\n * Suscribe to Firestore Document changes\n *\n * @param ref - Reference to the document you want to listen to\n * @param options\n */\nexport function useFirestoreDocData<T>(ref: firebase.firestore.DocumentReference, options?: ReactFireOptions<T>): ObservableStatus<T> {\n  const idField = options ? checkIdField(options) : 'NO_ID_FIELD';\n\n  const observableId = `firestore:docData:${ref.firestore.app.name}:${ref.path}:idField=${idField}`;\n  const observable = docData(ref, idField);\n\n  return useObservable(observableId, observable, options);\n}\n\n/**\n * Get a firestore document and don't subscribe to changes\n *\n * @param ref - Reference to the document you want to get\n * @param options\n */\nexport function useFirestoreDocDataOnce<T = unknown>(ref: firebase.firestore.DocumentReference, options?: ReactFireOptions<T>): ObservableStatus<T> {\n  const idField = options ? checkIdField(options) : 'NO_ID_FIELD';\n\n  const observableId = `firestore:docDataOnce:${ref.firestore.app.name}:${ref.path}:idField=${idField}`;\n  const observable$ = docData(ref, idField).pipe(first());\n\n  return useObservable(observableId, observable$, options);\n}\n\n/**\n * Subscribe to a Firestore collection\n *\n * @param ref - Reference to the collection you want to listen to\n * @param options\n */\nexport function useFirestoreCollection<T = { [key: string]: unknown }>(\n  query: firebase.firestore.Query,\n  options?: ReactFireOptions<T[]>\n): ObservableStatus<T extends {} ? T[] : firebase.firestore.QuerySnapshot> {\n  const observableId = `firestore:collection:${getUniqueIdForFirestoreQuery(query)}`;\n  const observable$ = fromCollectionRef(query);\n\n  return useObservable(observableId, observable$, options);\n}\n\n/**\n * Subscribe to a Firestore collection and unwrap the snapshot.\n *\n * @param ref - Reference to the collection you want to listen to\n * @param options\n */\nexport function useFirestoreCollectionData<T = { [key: string]: unknown }>(\n  query: firebase.firestore.Query,\n  options?: ReactFireOptions<T[]>\n): ObservableStatus<T[]> {\n  const idField = options ? checkIdField(options) : 'NO_ID_FIELD';\n  const observableId = `firestore:collectionData:${getUniqueIdForFirestoreQuery(query)}:idField=${idField}`;\n  const observable$ = collectionData(query, idField);\n\n  return useObservable(observableId, observable$, options);\n}\n","import * as React from 'react';\nimport { preloadPerformance } from './';\nimport { useFirebaseApp } from './firebaseApp';\n\nexport interface SuspensePerfProps {\n  children: React.ReactNode;\n  traceId: string;\n  fallback: React.ReactNode;\n  firePerf?: import('firebase/app').default.performance.Performance;\n}\n\nexport function SuspenseWithPerf({ children, traceId, fallback, firePerf }: SuspensePerfProps): JSX.Element {\n  if (!firePerf) {\n    const firebaseApp = useFirebaseApp();\n    preloadPerformance({ firebaseApp }).then(perf => perf());\n  }\n\n  const entries = performance?.getEntriesByName(traceId, 'measure') || [];\n  const startMarkName = `_${traceId}Start[${entries.length}]`;\n  const endMarkName = `_${traceId}End[${entries.length}]`;\n\n  const Fallback = () => {\n    React.useLayoutEffect(() => {\n      performance?.mark(startMarkName);\n\n      return () => {\n        performance?.mark(endMarkName);\n        performance?.measure(traceId, startMarkName, endMarkName);\n      };\n    }, []);\n\n    return <>{fallback}</>;\n  };\n\n  return <React.Suspense fallback={<Fallback />}>{children}</React.Suspense>;\n}\n","import { Observable } from 'rxjs';\n\ntype RemoteConfig = import('firebase/app').default.remoteConfig.RemoteConfig;\ntype RemoteConfigValue = import('firebase/app').default.remoteConfig.Value;\n\nexport type AllParameters = {\n  [key: string]: RemoteConfigValue;\n};\n\ninterface ParameterSettings<T> {\n  remoteConfig: RemoteConfig;\n  key: string;\n  getter: (key: string) => T;\n}\n\n// TODO(davideast): Replace with RxFire functions when they land\nfunction parameter$<T>({ remoteConfig, key, getter }: ParameterSettings<T>): Observable<T> {\n  return new Observable(subscriber => {\n    remoteConfig.ensureInitialized().then(() => {\n      // 'this' for the getter loses context in the next()\n      // call, so it needs to be bound.\n      subscriber.next(getter.bind(remoteConfig)(key));\n    });\n  });\n}\n\nexport function getValue(remoteConfig: RemoteConfig, key: string) {\n  const getter = remoteConfig.getValue;\n  return parameter$({ remoteConfig, key, getter });\n}\n\nexport function getString(remoteConfig: RemoteConfig, key: string) {\n  const getter = remoteConfig.getString;\n  return parameter$<string>({ remoteConfig, key, getter });\n}\n\nexport function getNumber(remoteConfig: RemoteConfig, key: string) {\n  const getter = remoteConfig.getNumber;\n  return parameter$<number>({ remoteConfig, key, getter });\n}\n\nexport function getBoolean(remoteConfig: RemoteConfig, key: string) {\n  const getter = remoteConfig.getBoolean;\n  return parameter$<boolean>({ remoteConfig, key, getter });\n}\n\nexport function getAll(remoteConfig: RemoteConfig) {\n  const getter = remoteConfig.getAll;\n  // No key is needed for getAll()\n  return parameter$<AllParameters>({ remoteConfig, key: '', getter });\n}\n","import { useRemoteConfig } from '../firebaseApp';\nimport { useObservable, ObservableStatus } from '../useObservable';\nimport { getValue, getString, getBoolean, getNumber, getAll, AllParameters } from './getValue';\nimport { Observable } from 'rxjs';\n\ntype RemoteConfig = import('firebase/app').default.remoteConfig.RemoteConfig;\ntype RemoteConfigValue = import('firebase/app').default.remoteConfig.Value;\ntype Getter$<T> = (remoteConfig: RemoteConfig, key: string) => Observable<T>;\n\ninterface RemoteConfigWithPrivate extends RemoteConfig {\n  // This is a private API, assume optional\n  _storage?: { appName: string };\n}\n\n/**\n * Helper function to construct type safe functions. Since Remote Config has\n * methods that return different types for values, we need to be extra safe\n * to make sure we are not returning improper types by accident.\n * @param key\n * @param getter\n * @param remoteConfig\n */\nfunction useRemoteConfigValue_INTERNAL<T>(key: string, getter: Getter$<T>, remoteConfig?: RemoteConfig): ObservableStatus<T> {\n  // TODO: Find an alternative that doesn't break the rules of hooks (conditional hook call)\n  remoteConfig = remoteConfig || useRemoteConfig();\n\n  // INVESTIGATE need to use a public API to get at the app name, one doesn't appear to exist...\n  // we might need to iterate over the Firebase apps and check for remoteConfig equality? this works for now\n  const appName = (remoteConfig as RemoteConfigWithPrivate)._storage?.appName;\n  const $value = getter(remoteConfig, key);\n\n  const observableId = `remoteConfig:${key}:${getter.name}:${appName}`;\n  return useObservable<T>(observableId, $value);\n}\n\n/**\n * Accepts a key and optionally a Remote Config instance. Returns a\n * Remote Config Value.\n *\n * @param key The parameter key in Remote Config\n * @param remoteConfig Optional instance. If not provided ReactFire will either grab the default instance or lazy load.\n */\nexport function useRemoteConfigValue(key: string, remoteConfig?: RemoteConfig): ObservableStatus<RemoteConfigValue> {\n  return useRemoteConfigValue_INTERNAL<RemoteConfigValue>(key, getValue, remoteConfig);\n}\n\n/**\n * Convience method similar to useRemoteConfigValue. Returns a `string` from a Remote Config parameter.\n * @param key The parameter key in Remote Config\n * @param remoteConfig Optional instance. If not provided ReactFire will either grab the default instance or lazy load.\n */\nexport function useRemoteConfigString(key: string, remoteConfig?: RemoteConfig): ObservableStatus<string> {\n  return useRemoteConfigValue_INTERNAL<string>(key, getString, remoteConfig);\n}\n\n/**\n * Convience method similar to useRemoteConfigValue. Returns a `number` from a Remote Config parameter.\n * @param key The parameter key in Remote Config\n * @param remoteConfig Optional instance. If not provided ReactFire will either grab the default instance or lazy load.\n */\nexport function useRemoteConfigNumber(key: string, remoteConfig?: RemoteConfig): ObservableStatus<number> {\n  return useRemoteConfigValue_INTERNAL<number>(key, getNumber, remoteConfig);\n}\n\n/**\n * Convience method similar to useRemoteConfigValue. Returns a `boolean` from a Remote Config parameter.\n * @param key The parameter key in Remote Config\n * @param remoteConfig Optional instance. If not provided ReactFire will either grab the default instance or lazy load.\n */\nexport function useRemoteConfigBoolean(key: string, remoteConfig?: RemoteConfig): ObservableStatus<boolean> {\n  return useRemoteConfigValue_INTERNAL<boolean>(key, getBoolean, remoteConfig);\n}\n\n/**\n * Convience method similar to useRemoteConfigValue. Returns allRemote Config parameters.\n * @param key The parameter key in Remote Config\n * @param remoteConfig Optional instance. If not provided ReactFire will either grab the default instance or lazy load.\n */\nexport function useRemoteConfigAll(key: string, remoteConfig?: RemoteConfig): ObservableStatus<AllParameters> {\n  return useRemoteConfigValue_INTERNAL<AllParameters>(key, getAll, remoteConfig);\n}\n","import firebase from 'firebase/app';\nimport * as React from 'react';\nimport { getDownloadURL } from 'rxfire/storage';\nimport { Observable } from 'rxjs';\nimport { ReactFireOptions, useObservable, ObservableStatus } from './';\nimport { useStorage, useSuspenseEnabledFromConfigAndContext } from './firebaseApp';\n\n/**\n * modified version of rxFire's _fromTask\n *\n * @param task\n */\nfunction _fromTask(task: firebase.storage.UploadTask) {\n  return new Observable<firebase.storage.UploadTaskSnapshot>(subscriber => {\n    const progress = (snap: firebase.storage.UploadTaskSnapshot) => {\n      return subscriber.next(snap);\n    };\n    const error = (e: any) => subscriber.error(e);\n    const complete = () => {\n      return subscriber.complete();\n    };\n    task.on('state_changed', progress, error, complete);\n\n    // I REMOVED THE UNSUBSCRIBE RETURN BECAUSE IT CANCELS THE UPLOAD\n    // https://github.com/firebase/firebase-js-sdk/issues/1659\n  });\n}\n\n/**\n * Subscribe to the progress of a storage task\n *\n * @param task - the task you want to listen to\n * @param ref - reference to the blob the task is acting on\n * @param options\n */\nexport function useStorageTask<T = unknown>(\n  task: firebase.storage.UploadTask,\n  ref: firebase.storage.Reference,\n  options?: ReactFireOptions<T>\n): ObservableStatus<firebase.storage.UploadTaskSnapshot | T> {\n  const observableId = `storage:task:${ref.toString()}`;\n  const observable$ = _fromTask(task);\n\n  return useObservable(observableId, observable$, options ? options.initialData : undefined);\n}\n\n/**\n * Subscribe to a storage ref's download URL\n *\n * @param ref - reference to the blob you want to download\n * @param options\n */\nexport function useStorageDownloadURL<T = string>(ref: firebase.storage.Reference, options?: ReactFireOptions<T>): ObservableStatus<string | T> {\n  const observableId = `storage:downloadUrl:${ref.toString()}`;\n  const observable$ = getDownloadURL(ref);\n\n  return useObservable(observableId, observable$, options);\n}\n\ntype StorageImageProps = {\n  storagePath: string;\n  storage?: firebase.storage.Storage;\n  suspense?: boolean;\n  placeHolder?: JSX.Element;\n};\n\nfunction StorageFromContext(props: StorageImageProps & React.DetailedHTMLProps<React.ImgHTMLAttributes<HTMLImageElement>, HTMLImageElement>) {\n  const storage = useStorage();\n\n  props = { ...props, storage };\n\n  return <INTERNALStorageImage {...props} />;\n}\n\nfunction INTERNALStorageImage(props: StorageImageProps & React.DetailedHTMLProps<React.ImgHTMLAttributes<HTMLImageElement>, HTMLImageElement>): JSX.Element {\n  let { storage, storagePath, suspense, placeHolder, ...imgProps } = props;\n\n  const reactfireOptions: ReactFireOptions<string> = {\n    suspense: useSuspenseEnabledFromConfigAndContext(suspense)\n  };\n\n  if (!storage) {\n    throw new Error('Storage was not passed to component INTERNALStorageImage. This should not be possible');\n  }\n\n  const { status, data: imgSrc } = useStorageDownloadURL(storage.ref(storagePath), reactfireOptions);\n\n  if (status === 'success') {\n    if (!(imgProps.alt || imgProps.alt === '')) {\n      console.warn(\n        `No alt prop provided for StorageImage with storagePath \"${storagePath}\"`,\n        'img elements must have an alt prop, either with meaningful text, or an empty string for decorative images'\n      );\n    }\n\n    return <img src={imgSrc} alt={imgProps.alt} {...imgProps} />;\n  } else {\n    return placeHolder ?? <>''</>;\n  }\n}\n\nexport function StorageImage(props: StorageImageProps & React.DetailedHTMLProps<React.ImgHTMLAttributes<HTMLImageElement>, HTMLImageElement>) {\n  let { storage } = props;\n\n  if (storage) {\n    return <INTERNALStorageImage {...props} />;\n  } else {\n    return <StorageFromContext {...props} />;\n  }\n}\n","import firebase from 'firebase/app';\nimport { SuspenseSubject } from './SuspenseSubject';\n\nexport type ReactFireGlobals = {\n  _reactFireDatabaseCachedQueries: Array<firebase.database.Query>;\n  _reactFireFirestoreQueryCache: Array<firebase.firestore.Query>;\n  _reactFirePreloadedObservables: Map<string, SuspenseSubject<any>>;\n};\n\nexport interface ReactFireOptions<T = unknown> {\n  idField?: string;\n  initialData?: T | any;\n  suspense?: boolean;\n}\n\nexport function checkOptions(options: ReactFireOptions, field: string) {\n  // make sure the field passed in is a valid key of ReactFire Options\n  if (field === 'idField' || field === 'initialData' || field === 'suspense') {\n    return options ? (options[field] as ReactFireOptions['idField'] | ReactFireOptions['initialData'] | ReactFireOptions['suspense']) : undefined;\n  }\n\n  throw new Error(`Field \"${field}\" is not a valid key in ReactFireOptions`);\n}\n\nexport function checkinitialData(options: ReactFireOptions) {\n  return checkOptions(options, 'initialData');\n}\n\nexport function checkIdField(options: ReactFireOptions) {\n  return checkOptions(options, 'idField');\n}\n\nexport * from './auth';\nexport * from './database';\nexport * from './firebaseApp';\nexport * from './firestore';\nexport * from './performance';\nexport * from './remote-config';\nexport * from './storage';\nexport * from './useObservable';\n"],"names":["importSDK","sdk","proxyComponent","componentName","contextualApp","useComponent","app","suspense","useFirebaseApp","suspenseEnabled","useSuspenseEnabledFromConfigAndContext","sdkSubject","preload","hasValue","firstEmission","firebase","Error","charAt","toUpperCase","slice","Proxy","get","target","p","apply","_this","args","component","bind","useAuth","useAnalytics","useDatabase","useFirestore","useFunctions","useMessaging","usePerformance","useRemoteConfig","useStorage","auth","analytics","database","firestore","functions","messaging","performance","remoteConfig","storage","preloadFactory","options","firebaseApp","setup","toPromise","settingsCallback","preloadObservable","Observable","emitter","then","instanceFactory","Promise","resolve","next","complete","e","error","name","preloadAuth","preloadAnalytics","preloadDatabase","preloadFirestore","preloadFunctions","preloadMessaging","preloadPerformance","preloadRemoteConfig","preloadStorage","DEFAULT_APP_NAME","FirebaseAppContext","React","undefined","SuspenseEnabledContext","version","shallowEq","a","b","Object","keys","every","key","FirebaseAppProvider","props","firebaseConfig","appName","existingApp","apps","find","reactVersion","registerVersion","initializeApp","Provider","value","useIsSuspenseEnabled","suspenseFromConfig","suspenseFromContext","preloadUser","result","user","useUser","observableId","observable$","currentUser","initialData","useObservable","useIdTokenResult","forceRefresh","uid","from","getIdTokenResult","ClaimsCheck","fallback","children","requiredClaims","data","claims","missingClaims","forEach","claim","expected","actual","length","AuthCheck","cachedQueries","globalThis","_reactFireDatabaseCachedQueries","getUniqueIdForDatabaseQuery","query","index","findIndex","cachedQuery","isEqual","push","useDatabaseObject","ref","toString","object","objectVal","keyField","pipe","map","change","changeToData","val","snapshot","useDatabaseObjectData","idField","checkIdField","useDatabaseList","hash","list","useDatabaseListData","listVal","SuspenseSubject","innerObservable","_timeoutWindow","_firstEmission","_resolveFirstEmission","_innerObservable","tap","v","_next","_error","catchError","empty","shareReplay","_warmupSubscription","subscribe","_timeoutHandler","setTimeout","_reset","_hasValue","_value","unsubscribe","_subscribe","subscriber","clearTimeout","_innerSubscriber","add","Subject","DEFAULT_TIMEOUT","preloadedObservables","_reactFirePreloadedObservables","Map","source","id","has","observable","set","config","hasInitialData","includes","latest","setValue","subscription","status","hasError","hasEmitted","isComplete","isStopped","ourError","firstValuePromise","_reactFireFirestoreQueryCache","getUniqueIdForFirestoreQuery","preloadFirestoreDoc","refProvider","doc","path","useFirestoreDoc","useFirestoreDocOnce","first","useFirestoreDocData","docData","useFirestoreDocDataOnce","useFirestoreCollection","fromCollectionRef","useFirestoreCollectionData","collectionData","SuspenseWithPerf","traceId","firePerf","perf","entries","getEntriesByName","startMarkName","endMarkName","Fallback","mark","measure","parameter$","getter","ensureInitialized","getValue","getString","getNumber","getBoolean","getAll","useRemoteConfigValue_INTERNAL","_storage","$value","useRemoteConfigValue","useRemoteConfigString","useRemoteConfigNumber","useRemoteConfigBoolean","useRemoteConfigAll","_fromTask","task","progress","snap","on","useStorageTask","useStorageDownloadURL","getDownloadURL","StorageFromContext","INTERNALStorageImage","storagePath","placeHolder","imgProps","reactfireOptions","imgSrc","alt","console","warn","src","StorageImage","checkOptions","field","checkinitialData"],"mappings":"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"}